// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_math = require("rescript/lib/js/js_math.js");
var Caml_array = require("rescript/lib/js/caml_array.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");

var pog = [
  "Poggers",
  "POG",
  "POGNATION",
  "POGGERS",
  "pog",
  "poggers"
];

function getPogListRec(_number, list) {
  while(true) {
    var number = _number;
    if (number === 0) {
      return list;
    }
    list.push(Caml_array.get(pog, Js_math.random_int(0, pog.length)));
    _number = number - 1 | 0;
    continue ;
  };
}

function getPogList(number) {
  return new Promise((function (resolve, reject) {
                try {
                  var list = [Caml_array.get(pog, Js_math.random_int(0, pog.length))];
                  return resolve(getPogListRec(number - 1 | 0, list));
                }
                catch (raw_x){
                  var x = Caml_js_exceptions.internalToOCamlException(raw_x);
                  return reject(x);
                }
              }));
}

exports.pog = pog;
exports.getPogListRec = getPogListRec;
exports.getPogList = getPogList;
/* No side effect */
